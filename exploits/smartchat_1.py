import requests
import re

JSON_RPC = "http://10.10.10.13:8545"

def send_jsonrpc(s, method, params):
    data={"jsonrpc":"2.0","method":method,"params":params,"id":1}
    result = s.post(JSON_RPC, json=data)
    result = result.json()['result']
    return result

e = 'a4159f2ad006535ad24e8572882c463fc267e07cf75d5f5ad17c9f02fb224639de7e8e7cf320445fce48'

def hexToBytes(hexes):
    return [int(hexes[i:i+2], 16) for i in range(0, len(hexes), 2)]

def decrypt(m, k):
    d = b''
    for i in range(len(m)):
        d += bytes([m[i] ^ k[i % len(k)]])
    return d

mask = 'InnoCTF{'.encode()
session = requests.Session()

for i in range(14500, 1000000):
    transactions = []
    counter = 0
    results = send_jsonrpc(session, 'eth_getTransactionByBlockNumberAndIndex', [hex(i), hex(counter)])
    if results:
        transactions.append(results)
    while results:
        counter += 1
        results = send_jsonrpc(session, 'eth_getTransactionByBlockNumberAndIndex', [hex(i), hex(counter)])
        if results:
            transactions.append(results)
    for t in transactions:
        inp = t['input']
        if inp.startswith('0xcddd01a3'):
            if len(inp) == 266:
                e = inp[138:138+0x2a*2]
                e = hexToBytes(e)[2:]
                key = [e[i] ^ mask[i] for i in range(len(mask))]
                try:
                    flag = decrypt(e, key).decode()
                    if re.match('InnoCTF\{[0-9A-Z]{31}\}', flag):
                        print(flag)
                except:
                    pass
