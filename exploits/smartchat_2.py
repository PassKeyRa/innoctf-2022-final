#!/usr/bin/env python3

from hdwallet import BIP44HDWallet
from hdwallet.cryptocurrencies import EthereumMainnet
from hdwallet.derivations import BIP44Derivation
from hdwallet.utils import generate_mnemonic
from typing import Optional
import re
import time
import random
from multiprocessing import Process, Manager

N = 7

mg = Manager()
stop = mg.Value('i', 0)

def worker():
    while not stop.value:
        bip44_hdwallet: BIP44HDWallet = BIP44HDWallet(cryptocurrency=EthereumMainnet)
        # Generate english mnemonic words
        MNEMONIC: str = generate_mnemonic(language="english", strength=128)
        
        bip44_hdwallet.from_mnemonic(
            mnemonic=MNEMONIC, language="english", passphrase=None
        )
        bip44_hdwallet.clean_derivation()
        
        bip44_derivation: BIP44Derivation = BIP44Derivation(
            cryptocurrency=EthereumMainnet, account=0, change=False, address=0
        )
        bip44_hdwallet.from_path(path=bip44_derivation)
        address = bip44_hdwallet.address()
        priv_key = '0x'+bip44_hdwallet.private_key()
        if re.match("^0x31337", address.lower()):
            print(address, priv_key, MNEMONIC)
            stop.value = 1

pcs = []
for i in range(N):
    p = Process(target=worker, args=())
    p.daemon = True
    p.start()
    pcs.append(p)

st = time.time()
for p in pcs:
    p.join()
print('Done for', time.time()-st, 'seconds')
